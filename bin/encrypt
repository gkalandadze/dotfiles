#!/usr/bin/env sh

help_text=$(cat << EOM
$(basename "$0") - Encrypt files or folders symmetrically with GPG
Usage: $(basename "$0") [args] [filename]
Arguments:
-e | --encrypt              Encrypt file or folder (optional)
-d | --decrypt              Decrypt file or folder
-h | --help                 Show help message
EOM
)

encrypt () {
  if [ -f "$filename" ]; then
    if gpg -c --pinentry-mode loopback --no-symkey-cache --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65536 --output "$filename".gpg "$filename" ; then
      echo "> File Encrypted Successfully"
      echo "> Encrypted Filename: $filename.gpg"
    fi
  elif [ -d "$filename" ]; then
      echo "> Creating archive from provided directory"
      if tar czf "$filename".tar.gz "$filename" ; then
        echo "> Created archive"
        echo "> Encrypting Archive"
        if gpg -c --pinentry-mode loopback --no-symkey-cache --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65536 --output "$filename".tar.gz.gpg "$filename".tar.gz ; then
          echo "> Archive Encrypted Successfully"
          echo "> Encrypted Filename: $filename.tar.gz.gpg"
          rm -f "$filename".tar.gz && echo "> Removed temporary archive"
        fi
      else
        echo "> Couldn't create archive!" ; exit 1
      fi
  else
    echo "> Unknown file or folder" ; exit 1
  fi
}

decrypt () {
  extension="${filename##*.}"
  base_filename="${filename%.*}"

  if [ "$extension" = "gpg" ] && [ -f "$filename" ]; then
    if gpg --pinentry-mode loopback --no-symkey-cache --quiet --output "$base_filename" --decrypt "$filename" ; then
      echo "> File Decrypted Successfully"
      echo "> Decrypted Filename: $base_filename"
    fi
  else
    echo "> File doesn't exists or isn't encrypted" ; exit 0
  fi
}


if [ -n "$1" ]; then
  case $1 in
    -d|--decrypt)       filename=$2 && decrypt && exit 0;;
    -e|--encrypt)       filename=$2 && encrypt && exit 0;;
    -h|--help)          echo "$help_text";        exit 0;;
    *)                  filename=$1 && encrypt && exit 0;;
  esac
else
  echo "$help_text" && exit 0
fi
