#!/usr/bin/env sh

HELP_TEXT="cat << EOM
$(basename "$0") - Encrypt files symmetrically with GPG
Usage: $(basename "$0") [args] [filename]
Arguments:
-e | --encrypt              Encrypt file
-d | --decrypt              Decrypt file
EOM
"

encrypt () {
  if [ -f "$FILE" ]; then
    if gpg -c --pinentry-mode loopback --no-symkey-cache --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65536 --output "$FILE".gpg "$FILE" ; then
      echo "> File Encrypted Successfully"
      echo "> Encrypted Filename: $FILE.gpg"
    fi
  else
    if [ -d "$FILE" ]; then
    echo "> Creating archive from provided directory"
    if tar czf "$FILE".tar.gz "$FILE" ; then
      echo "> Created archive"
      echo "> Encrypting Archive"
      if gpg -c --pinentry-mode loopback --no-symkey-cache --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65536 --output "$FILE".tar.gz.gpg "$FILE".tar.gz ; then
        echo "> Archive Encrypted Successfully"
        echo "> Encrypted Filename: $FILE.tar.gz.gpg"
        rm -f "$FILE".tar.gz && echo "> Removed temporary archive"
      fi
    fi
    else
      echo "> Couldn't create archive!" && exit 1
    fi
  fi
}

decrypt () {
  filename=$FILE
  extension="${filename##*.}"
  base_filename="${filename%.*}"

  if [ "$extension" = "gpg" ] && [ -f "$filename" ]; then
    if gpg --pinentry-mode loopback --no-symkey-cache --quiet --output "$base_filename" --decrypt "$filename" ; then
      echo "> File Decrypted Successfully"
      echo "> Decrypted Filename: $base_filename"
    fi
  else
    echo "> File doesn't exists or isn't encrypted" && exit 0
  fi
}

show_help () {
  echo "$HELP_TEXT"
}

while [ "$#" -gt 0 ]; do
  case $1 in
    -e|--encrypt)           MODE="encrypt"; FILE=$2; shift; shift;;
    -d|--decrypt)           MODE="decrypt"; FILE=$2; shift; shift;;
    *)                      show_help; exit 1                    ;;
  esac
done

if [ "$MODE" = "encrypt" ]; then
  encrypt
  exit 0
elif [ "$MODE" = "decrypt" ]; then
  decrypt
  exit 0
fi
